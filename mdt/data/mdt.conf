optimization_settings:
    # Please see the documentation of MOT.meta_optimizer for more information about the options
    general:
        # the optimizers to use. List at least one, can be more for use with extra_optim_runs > 0.
        # You can set the patience to null. Then the default patience for the optimizer is used.
        optimizers:
            -   name: 'Powell'
                patience: 2

        # The additional number of iterations, with either a random perturbation or a smoothing step in between.
        extra_optim_runs: 0

        # If we want to use smoothing or not. This is mutually exclusive with extra_optim_runs_use_perturbation.
        # This takes precedence over using perturbations.
        extra_optim_runs_apply_smoothing: False

        # If we want to use the parameter perturbation by the model or not.
        # This is mutually exclusive with extra_optim_runs_apply_smoothing.
        extra_optim_runs_use_perturbation: True

        # The smoothing routines to use during the extra runs, size is in voxels
        smoothing_routines:
            -   name: 'MedianFilter'
                size: [1, 1, 1]

        # The load balancer to use for the computations
        load_balancer:
            name: 'PreferGPU'
            run_in_batches: True
            single_batch_length: !!float 2.0e6

        # the indices of the devices we want to use for the computations.
        # This works in combination with the load balancers.
        # For the indices please run the script mdt-list-devices.
        # An empty list indicates that we want to use all devices.
        cl_devices: []

    # Optimizations settings for single models. This can overwrite any value from general_optimization_settings.
    # This uses regex expressions for matching the model_name and the settings are accumulative and order matters.
    # Note 1) the optimization configuration hints in the cascades models takes precedence over these values.
    # Note 2) if you specify an optimizer in the fit_model function these settings are overwritten
    single_model: []


# The strategies to during model fitting.
fitting_strategies:
    general:
        name: AllSlicesAtOnce

    # Optimizations settings for single models. This can overwrite any value from general_optimization_settings.
    # This uses regex expressions for matching the model_name and the settings are accumulative and order matters.
    single_model:
        -   model_name: '^Noddi'
            config:
                name: SliceBySlice
                options:
                    slice_dimension: 2
                    slice_width: 5

        -   model_name: '^Charmed(_[1-2]r)?'
            config:
                name: SliceBySlice
                options:
                    slice_dimension: 2
                    slice_width: 5

logging:
    info_dict:
        version: 1
        disable_existing_loggers: False
        formatters:
            simple:
                format: "[%(asctime)s] [%(levelname)s] [%(name)s] [%(funcName)s] - %(message)s"

        handlers:
            console:
                class: logging.StreamHandler
                level: DEBUG
                formatter: simple
                stream: ext://sys.stdout

            model_output_file:
                class: mdt.log_handlers.ModelOutputLogHandler
                level: DEBUG
                formatter: simple
                encoding: utf8

            dispatch_handler:
                class: mdt.log_handlers.LogDispatchHandler
                level: INFO
                formatter: simple

        loggers:
            mot:
                level: INFO
                handlers: [console, model_output_file]

            mdt:
                level: INFO
                handlers: [console, model_output_file]

        root:
            level: INFO
            handlers: [dispatch_handler]
