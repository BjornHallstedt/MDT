.. _analysis:

********
Analysis
********
There are three ways to interface with MDT, the :ref:`Graphical User Interface (GUI) <analysis_using_the_gui>`,
:ref:`the command line <analysis_using_the_cli>` and :ref:`using Python directly <analysis_using_python>`.
This guide will walk you through basic model analysis with MDT using all of these interfaces.

This guide can in principle be followed with any compatible dataset, but it is suggested to first follow the guide using the MDT example datasets.
There are two MDT example datasets, a b1k_b2k dataset and a b6k dataset.
The first has a shell of b=1000 and of b=2000 and is very well suited for Tensor and NODDI.
The other dataset has a range of shells between b=1000 and b=6000 and is ideally suited for CHARMED analysis.
Two slices of both these datasets are directly available after MDT installation, for obtaining these follow the guide.
The complete example datasets can be downloaded from: TODO provide download location


.. _analysis_using_the_gui:

Using the GUI
=============
One of the ways to use MDT for model analysis is by using the Graphical User Interface (GUI).
After installation a few utility scripts are available, one of which launches the GUI.
To launch the GUI in Linux and OSX, please open a console and type ``mdt-gui`` or ``MDT`` to launch the analysis GUI.
In Windows one can either open an Anaconda prompt and type ``mdt-gui`` or ``MDT``.
Alternatively, in Windows, one can type ``mdt-gui`` or ``MDT`` in the search bar under the start button to find and launch the GUI.


.. figure:: _static/figures/mdt_gui_intro_screenshot.png

    A screenshot of the MDT GUI in Linux.


Using the GUI is a good starting point for model analysis since it guides you through the steps needed for the model analysis.
In addition, as a service to the user, the GUI also writes Python and Bash script files for most of the actions in the GUI.
This allows you to use the GUI to generate a code template that can be used for further processing.


Obtaining the example data
--------------------------
While this guide can in principle be followed using any dataset it is advised to first follow it using the MDT example data.
A few slices of this example data come pre-supplied with MDT.
To obtain these, please open the GUI and find in the menu bar: "Help -> Get example data".
This will open a dialog in which you can specify a directory and MDT will place the example data slices in that directory.


Creating a protocol file
------------------------
As explained in :ref:`concepts_protocol`, MDT stores all the acquisition settings relevant for the analysis in a Protocol file.
To create one using the GUI, please go to the tab "Generate protocol file".
On the bottom of the tab you can find the button "Load g & b" that is meant to load a b-vec and b-val file in the GUI.
Please click the button and, for the sake of this example, load from the MDT example data the b-vec and b-val file of the b1k_b2k dataset.
This tab should now look similar to this example:

.. figure:: _static/figures/mdt_gui_generate_protocol.png

    The Protocol tab after loading a bvec and bval file.

Having loaded a b-vec/b-val pair (or a Protocol file), you are presented with a tabular overview of your protocol, with some basic statics below the table.
The table shows you per volume (rows) the values for each of the columns.
Columns in gray are automatically calculated or estimated from the other columns.
For example, in the screenshot above, ``G``, ``Delta`` and ``delta`` are estimated from the b-values by assuming ``Delta == delta``.

To add or update a column you can use the dialog under the button "Add / update column".
To remove a column, right click the column header and select the "Remove column" option.

For the sake of this example, please add to the loaded b-vec and b-val files the columns "Delta", "delta", "TE" and "TR" with values
42e-3 seconds, 31.7e-3 seconds, 60e-3 and 7.1 seconds respectively.
Then, please save the protocol as "b1k_b2k_test.prtcl" and compare it to the pre-supplied protocol for comparison (open both in a separate GUI).


Generating a brain mask
-----------------------
MDT has some rough functionality for creating a brain mask, similar to the ``median_otsu`` algorithm in Dipy.
This algorithm is not as sophisticated as for example BET in FSL, therefore we will not go in to much detail here.
The mask generating functionality in MDT is merely meant for quickly creating a mask within MDT.

Since the MDT example data comes pre-supplied with a mask (generated by BET), we won't cover mask generation here.
Also, the process is fairly straightforward by just supplying a DWI volume and a protocol.


Generating a ROI mask
---------------------
It is sometimes convenient to run analysis on a single slice (Region Of Interest) before running it whole brain.
Using the tab "Generate ROI mask" it is possible to load a whole brain mask and create a new mask where only one slice is used.
This ROI mask is just another mask but with more voxels masked.

We do not need this step for the MDT example slices since that dataset is already compressed to two slices.


Ball&Stick_r1 estimation example
--------------------------------
With a protocol and mask ready we can now proceed with model analysis.
Please open the tab "Fit model" and fill in the fields using the "b1k_b2k" dataset as an example.
Selecting a model is made easy using the drop down menu.
All models that MDT can find are in this list, single composite models and cascaded models, standard supplied models and your own models.
See :ref:`dynamic_modules` on how to add models to this list, see :ref:`concepts_composite_and_cascade_models` for more information on the types of models (composite and cascade).

Having filled in all the required fields you can now press "Run" and wait a moment while MDT calculates your selected model.
Afterwards you go to the "View results" tab to launch the MDT map viewer GUI for visually inspecting the results.

By default MDT returns a lot of result maps, like various error maps, additional maps like FSL like vector component maps, and more.
All these maps are in nifti format (.nii) and can be viewed and opened in any compatible viewer like for example fslview.

In addition to the results, MDT also writes a Python and a Bash script file to a "script" directory next to your DWI file.
These script files allow you to reproduce the model fitting using a Python script file or by using the command line.


Estimating any model
--------------------
In general, using the GUI, estimating any model is just a matter of selecting the right model and clicking the run button.
Please be advised though that some models require specific protocol settings and/or require specific static maps to be present.
For example, the CHARMED models requires that the "TE" is specified in your protocol.
MDT will help you by warning you if the available data is not suited for the selected model.

For adding additional data, like static maps, a noise standard deviation or a gradient deviations map you can use the button "Additional data".
The button "Optimization options" allows you to set specific optimization options like which optimizer to use and with which precision you would like to estimate the models.
The defaults are generally fine.


.. _analysis_using_the_cli:

Using the command line
======================

Creating a protocol file
------------------------

Ball&Stick_r1 estimation example
--------------------------------

Estimating another model
------------------------

Estimating Ball&Sticks and NODDI on 3T HCP data
-----------------------------------------------
Estimating CHARMED on HCP MGH data
----------------------------------

Batch fitting many subjects
---------------------------


.. _analysis_using_python:


Using Python
============

Creating a protocol file
------------------------

Tensor estimation example
-------------------------
Estimating another model
------------------------

Estimating Ball&Sticks and NODDI on 3T HCP data
-----------------------------------------------
Estimating CHARMED on HCP MGH data
----------------------------------

Batch fitting many subjects
---------------------------
